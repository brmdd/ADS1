# Assignment 1

This Java program allows users to perform various simple tasks using recursion.

## How to Use
1. Clone the repository or download the `Main.java` file.
2. Compile the `Main.java` file using any Java compiler.
3. Run the compiled `Main` class.
4. Choose a task by entering the corresponding number between 1-10 when prompted.
5. Follow the instructions for each task provided by the program.
6. Repeat steps 4-5 to perform other tasks.

## Methods

### 1. Find the smallest element in an array.
- **Input:** Length of the array followed by the elements of the array separated by spaces.
- **Time Complexity:** O(n), where n is the number of elements in the array.

### 2. Calculate the average of elements in an array.
- **Input:** Length of the array followed by integers representing the elements of the array.
- **Time Complexity:** O(n), where n is the number of elements in the array.

### 3. Check if a number is prime or composite.
- **Input:** Single integer.
- **Time Complexity:** O(sqrt(n)), where n is the input number.

### 4. Calculate factorial of a number.
- **Input:** Single integer.
- **Time Complexity:** O(n), where n is the input number.

### 5. Find the nth Fibonacci number.
- **Input:** Single integer.
- **Time Complexity:** O(n), where n is the input number.

### 6. Calculate power of a number.
- **Input:** Two integers representing the base and the exponent, respectively.
- **Time Complexity:** O(b), where b is the exponent.

### 7. Reverse an array of integers.
- **Input:** Length of the array followed by integers representing the elements of the array.
- **Time Complexity:** O(n), where n is the number of elements in the array.

### 8. Check if a string contains only digits.
- **Input:** Single string.
- **Time Complexity:** O(n), where n is the length of the string.

### 9. Calculate binomial coefficient.
- **Input:** Two integers representing n and k, respectively.
- **Time Complexity:** O(n), where n is the smaller of the two input integers.

### 10. Find the greatest common divisor (GCD) of two numbers.
- **Input:** Two integers.
- **Time Complexity:** O(log(min(a, b))), where a and b are the input integers.